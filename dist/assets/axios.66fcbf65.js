var T=Object.defineProperty;var g=Object.getOwnPropertySymbols;var b=Object.prototype.hasOwnProperty,L=Object.prototype.propertyIsEnumerable;var p=(r,t,e)=>t in r?T(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e,l=(r,t)=>{for(var e in t||(t={}))b.call(t,e)&&p(r,e,t[e]);if(g)for(var e of g(t))L.call(t,e)&&p(r,e,t[e]);return r};var k=(r,t,e)=>(p(r,typeof t!="symbol"?t+"":t,e),e);import{b as h}from"./axios.b6599a80.js";import{a as d,r as f}from"./index.89c7b702.js";const w=()=>P.get("/RefreshToken"),x=r=>R.post("/auth/login",r);let c=!1;const m=[];class ${constructor(t){k(this,"http");this.http=h.create(t),this.http.interceptors.request.use(e=>{const{token:o}=d();return o&&(e.headers.Authorization=o),e},e=>Promise.reject(e)),this.http.interceptors.response.use(e=>{const{status:o}=e;if(o===401)if(!c)c=!0,w().then(({code:a,data:n})=>{if(a===200){const{token:s,refreshToken:i}=n;return localStorage.setItem("token",`Bearer ${s}`),localStorage.setItem("refreshToken",`Bearer ${i}`),d().updateToken(s,i),this.http.defaults.headers.common.Authorization=`Bearer ${s}`,m.forEach(u=>{u(s)}),this.http(e.config)}return f.push("/Login"),e}).catch(()=>{f.push("/Login")}).finally(()=>{c=!1});else return new Promise(a=>{m.push(n=>{h.defaults.headers.common.Authorization=`Bearer ${n}`,a(this.http(e.config))})});return e},e=>{var o;if(((o=e.response)==null?void 0:o.status)===401)if(!c)c=!0,w().then(a=>{const{code:n,data:s}=a;if(n===200){const{token:i,refreshToken:u}=s;return localStorage.setItem("token",`Bearer ${i}`),localStorage.setItem("refreshToken",`Bearer ${u}`),d().updateToken(i,u),h.defaults.headers.common.Authorization=`Bearer ${i}`,m.forEach(B=>{B(i)}),h(e.config)}return f.push("/Login"),e}).catch(()=>{f.push("/Login")}).finally(()=>{c=!1});else return new Promise(a=>{m.push(n=>{h.defaults.headers.common.Authorization=`Bearer ${n}`,a(h(e.config))})});return Promise.reject(e)})}async get(t,e,o){return new Promise((a,n)=>{this.http.get(t,l({params:e},o)).then(s=>{a(s.data)}).catch(s=>n(s))})}async post(t,e,o){return new Promise((a,n)=>{this.http.post(t,e,l({},o)).then(s=>a(s.data)).catch(s=>n(s))})}}const P=new $({baseURL:"https://www.fastmock.site/mock/c2a5bcf67d768ed1c9e70df74b24d5b1/api",timeout:6e3}),R=new $({baseURL:"/api",timeout:6e3});export{P as a,x as l};
